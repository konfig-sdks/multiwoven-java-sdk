/*
 * MultiWoven API
 * Open-source Reverse ETL that makes data segmentation, sync and activation both easy and fully secure.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.SyncsCreateNewSyncOperationRequest;
import com.konfigthis.client.model.SyncsCreateNewSyncOperationRequestSync;
import com.konfigthis.client.model.SyncsCreateNewSyncOperationResponse;
import com.konfigthis.client.model.SyncsGetReportDataResponse;
import com.konfigthis.client.model.SyncsListOperationsResponse;
import com.konfigthis.client.model.SyncsShowDetailsResponse;
import com.konfigthis.client.model.SyncsUpdateSpecificSyncRequest;
import com.konfigthis.client.model.SyncsUpdateSpecificSyncRequestSync;
import com.konfigthis.client.model.SyncsUpdateSpecificSyncResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SyncsApi
 */
@Disabled
public class SyncsApiTest {

    private static SyncsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SyncsApi(apiClient);
    }

    /**
     * Create a new sync operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewSyncOperationTest() throws ApiException {
        SyncsCreateNewSyncOperationRequestSync sync = null;
        SyncsCreateNewSyncOperationResponse response = api.createNewSyncOperation()
                .sync(sync)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a specific sync operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSyncOperationTest() throws ApiException {
        String id = null;
        api.deleteSyncOperation(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Get report data based on given type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReportDataTest() throws ApiException {
        SyncsGetReportDataResponse response = api.getReportData()
                .execute();
        // TODO: test validations
    }

    /**
     * List all sync operations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listOperationsTest() throws ApiException {
        Integer pageNumber = null;
        Integer pageSize = null;
        SyncsListOperationsResponse response = api.listOperations()
                .pageNumber(pageNumber)
                .pageSize(pageSize)
                .execute();
        // TODO: test validations
    }

    /**
     * Show details of a specific sync operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void showDetailsTest() throws ApiException {
        String id = null;
        SyncsShowDetailsResponse response = api.showDetails(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a specific sync operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSpecificSyncTest() throws ApiException {
        String id = null;
        SyncsUpdateSpecificSyncRequestSync sync = null;
        SyncsUpdateSpecificSyncResponse response = api.updateSpecificSync(id)
                .sync(sync)
                .execute();
        // TODO: test validations
    }

}
