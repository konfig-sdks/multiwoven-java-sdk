/*
 * MultiWoven API
 * Open-source Reverse ETL that makes data segmentation, sync and activation both easy and fully secure.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ModelsCreateModelRequest;
import com.konfigthis.client.model.ModelsCreateModelRequestModel;
import com.konfigthis.client.model.ModelsCreateModelResponse;
import com.konfigthis.client.model.ModelsGetByIdResponse;
import com.konfigthis.client.model.ModelsListAllModelsResponse;
import com.konfigthis.client.model.ModelsUpdateModelByIdRequest;
import com.konfigthis.client.model.ModelsUpdateModelByIdResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModelsApi
 */
@Disabled
public class ModelsApiTest {

    private static ModelsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ModelsApi(apiClient);
    }

    /**
     * Creates a model
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createModelTest() throws ApiException {
        ModelsCreateModelRequestModel model = null;
        ModelsCreateModelResponse response = api.createModel()
                .model(model)
                .execute();
        // TODO: test validations
    }

    /**
     * Deletes a model
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteModelTest() throws ApiException {
        Integer id = null;
        api.deleteModel(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a model
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        Integer id = null;
        ModelsGetByIdResponse response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Lists all models
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllModelsTest() throws ApiException {
        ModelsListAllModelsResponse response = api.listAllModels()
                .execute();
        // TODO: test validations
    }

    /**
     * Updates a model
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateModelByIdTest() throws ApiException {
        Integer id = null;
        ModelsCreateModelRequestModel model = null;
        ModelsUpdateModelByIdResponse response = api.updateModelById(id)
                .model(model)
                .execute();
        // TODO: test validations
    }

}
